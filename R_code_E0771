pairwise comparisons for E0771:

against invitro:
printf "\"ids\",\"type\",\"path
\"\n\"29\",\"E0771_slice\",\"$gbm/expression/stringtie/29
\"\n\"30\",\"E0771_slice\",\"$gbm/expression/stringtie/30
\"\n\"31\",\"E0771_invitro\",\"$gbm/expression/stringtie/31
\"\n\"32\",\"E0771_invitro\",\"$gbm/expression/stringtie/32
\"\n" > E0771_slice_vs_invitro.csv



cd $gbm/de/ballgown/ref_only/

printf "\"ids\",\"type\",\"path\"\n\"29\",\"E0771_slice\",\"$gbm/expression/stringtie/29\"\n\"30\",\"E0771_slice\",\"$gbm/expression/stringtie/30\"\n\"31\",\"E0771_invitro\",\"$gbm/expression/stringtie/31\"\n\"32\",\"E0771_invitro\",\"$gbm/expression/stringtie/32\"\n" > E0771_slice_vs_invitro.csv



	R --no-restore
	library(ballgown)
	library(genefilter)
	library(dplyr)
	library(devtools)

	pheno_data = read.csv("E0771_slice_vs_invitro.csv")     ###change me


	bg = ballgown(samples=as.vector(pheno_data$path), pData=pheno_data)
	bg


	bg_table = texpr(bg, 'all')


	bg_gene_names = unique(bg_table[, 9:10])
	head(bg_gene_names)


	save(bg, file='bg.rda')



	
The stattest function below will require pairwise comparisons and can't know multiple comparisons at once

	results_transcripts = stattest(bg, feature="transcript", covariate="type", getFC=TRUE, meas="FPKM")


	results_genes = stattest(bg, feature="gene", covariate="type", getFC=TRUE, meas="FPKM")

	head(results_genes)


	results_genes = merge(results_genes, bg_gene_names, by.x=c("id"), by.y=c("gene_id"))

	write.table(results_transcripts, "E0771_slice_vs_invitro_transcript_results.tsv", sep="\t", quote=FALSE, row.names = FALSE)    ###change me
	write.table(results_genes, "E0771_slice_vs_invitro_gene_results.tsv", sep="\t", quote=FALSE, row.names = FALSE)                 ###change me


	bg_filt = subset (bg,"rowVars(texpr(bg)) > 1", genomesubset=TRUE)


	bg_filt_table = texpr(bg_filt , 'all')
	bg_filt_gene_names = unique(bg_filt_table[, 9:10])


	results_transcripts = stattest(bg_filt, feature="transcript", covariate="type", getFC=TRUE, meas="FPKM")
	results_genes = stattest(bg_filt, feature="gene", covariate="type", getFC=TRUE, meas="FPKM")
	results_genes = merge(results_genes, bg_filt_gene_names, by.x=c("id"), by.y=c("gene_id"))


	write.table(results_transcripts, "E0771_slice_vs_invitro_transcript_results_filtered.tsv", sep="\t", quote=FALSE, row.names = FALSE)   ###change me
	write.table(results_genes, "E0771_slice_vs_invitro_results_filtered.tsv", sep="\t", quote=FALSE, row.names = FALSE)    ###change me
	
	sig_transcripts = subset(results_transcripts, results_transcripts$pval<0.05)
	sig_genes = subset(results_genes, results_genes$pval<0.05)

	head(sig_genes)

	nrow(sig_genes)

	write.table(sig_transcripts, "E0771_slice_vs_invitro_transcript_results_sig.tsv", sep="\t", quote=FALSE, row.names = FALSE)      ###change me
	write.table(sig_genes, "E0771_slice_vs_invitro_gene_results_sig.tsv", sep="\t", quote=FALSE, row.names = FALSE)         ###change me

	quit()
	n



	grep -v feature E0771_slice_vs_invitro_gene_results_filtered.tsv | wc -l

	grep -v feature E0771_slice_vs_invitro_gene_results_sig.tsv | sort -rnk 3 | head -n 20 | column -t 	#Higher abundance in invitro
	grep -v feature E0771_slice_vs_invitro_gene_results_sig.tsv | sort -nk 3 | head -n 20 | column -t 	#Higher abundance in tissue



	grep -v feature E0771_slice_vs_invitro_gene_results_sig.tsv | cut -f 6 | sed 's/\"//g' > E0771_slice_vs_invitro_DE_genes.txt

	head E0771_slice_vs_invitro_DE_genes.txt
